// OpenId-based inbound identity flow
Flow org.gluu.inbound.openid
     Basepath ""
     Configs conf
obj = { providers: conf }
// Show form for provider selection
data = RRF "list.ftlh" obj
providerId = data.selection
opSettings = conf.$providerId
temp = {}
// Check if dynamic client registration is desired
When opSettings.dcr is not null and opSettings.dcr.enabled is true
     // Perform client registration and grab config data
     temp = Call org.gluu.inbound.oauth2.DCRUtil#registerClient opSettings.host opSettings.dcr.useCachedClient opSettings.oauth.redirectUri opSettings.oauth.scopes
// Fill missing data in opSettings, if any, like client creds
opSettings.oauth = Call org.gluu.inbound.oauth2.OAuthParams#update opSettings.oauth  temp opSettings.acrValues
// Launch utility flow
outcome = Trigger org.gluu.inbound.oauth2.AuthzCodeWithUserInfo opSettings.oauth
When outcome.success is true
     // Extract profile data (leaves token stuff aside)
     profile = outcome.data.profile
     // Do user provisioning and grab his uid
     uid = Call org.gluu.inbound.UserOnboardHelper#exec opSettings.provision.uidPrefix opSettings.provision.attribute profile
     // Finish returning the uid of the given user
     Finish uid
Finish outcome